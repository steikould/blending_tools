# .env.example - Environment variables template for the Fuel Blending Analytics Platform
# Duplicate this file to .env for local development and fill in the values.

# ---------------------------------
# GCP Configuration
# ---------------------------------
GOOGLE_CLOUD_PROJECT_ID=your-gcp-project-id
GOOGLE_APPLICATION_CREDENTIALS=./gcp-credentials.json # Path to your GCP service account key file

# ---------------------------------
# Backend API Service
# ---------------------------------
BACKEND_API_PORT=8000
CORS_ORIGIN=http://localhost:3000

# Database (PostgreSQL for operational data)
DB_HOST=db
DB_PORT=5432
DB_USER=blending_user
DB_PASSWORD=your_secure_password
DB_NAME=fuel_blending_db

# JWT Authentication
JWT_SECRET=your_jwt_secret_key
JWT_EXPIRES_IN=1d

# ---------------------------------
# Frontend Service
# ---------------------------------
# The port is managed by the dev server (e.g., Vite/CRA), but we define the API URL.
REACT_APP_API_URL=http://localhost:8000/api
REACT_APP_ML_API_URL=http://localhost:8001/api

# ---------------------------------
# ML Services (Python/FastAPI)
# ---------------------------------
ML_API_PORT=8001

# ---------------------------------
# BigQuery Configuration
# ---------------------------------
BIGQUERY_DATASET_ID=fuel_blending_analytics
BIGQUERY_LOCATION=US

# ---------------------------------
# Pub/Sub Configuration
# ---------------------------------
PUB_SUB_SCADA_TOPIC=scada-data-stream
PUB_SUB_ALERTS_TOPIC=quality-alerts
PUB_SUB_OPTIMIZATION_TOPIC=optimization-requests
PUB_SUB_BATCH_TRACKING_TOPIC=batch-position-updates

# Subscription names for the backend to pull from
SCADA_SUBSCRIPTION=scada-data-stream-sub
ALERTS_SUBSCRIPTION=quality-alerts-sub
OPTIMIZATION_SUBSCRIPTION=optimization-requests-sub
BATCH_TRACKING_SUBSCRIPTION=batch-position-updates-sub
